version: '3.7'
services:
  postgres_keycloak:
    container_name: postgres_keycloak
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres_keycloak
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres_keycloak:/data/postgres
    ports:
      - "5432:5432"
    restart: always

  mongodb_user:
    container_name: mongodb_user
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongodb-user-data:/data/db

  mongodb_media:
    container_name: mongodb_media
    image: mongo:latest
    restart: always
    ports:
      - "27018:27018"
    expose:
      - "27018"
    volumes:
      - ./mongodb-media-data:/data/db

  mongodb_journal:
    container_name: mongodb_journal
    image: mongo:latest
    restart: always
    ports:
      - "27019:27019"
    expose:
      - "27019"
    volumes:
      - ./mongodb-journal-data:/data/db

  mongodb_article:
    container_name: mongodb_article
    image: mongo:latest
    restart: always
    ports:
      - "27020:27020"
    expose:
      - "27020"
    volumes:
      - ./mongodb-article-data:/data/db

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: postgresql
      DB_ADDR: postgres
      DB_DATABASE: postgres_keycloak
      DB_USER: ipmugo_admin
      DB_PASSWORD: ipmugo_admin
      KEYCLOAK_ADMIN: ipmugo_admin
      KEYCLOAK_ADMIN_PASSWORD: ipmugo_admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    restart: always
    depends_on:
      - postgres_keycloak

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: always
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    image: dhyan2412/discovery-server:latest
    container_name: discovery-server
    restart: always
    ports:
      - "8352:8352"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  ## Api gateway Server
  api-gateway:
    image: dhyan2412/api-gateway:latest
    container_name: api-gateway
    restart: always
    ports:
      - "80:80"
    expose:
      - "80"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak


  ## Journal Server
  journal-service:
    image: dhyan2412/journal-service:latest
    container_name: journal-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb_journal
      - discovery-server
      - api-gateway
      - broker
      - zipkin

  ## Media Server
  media-service:
    image: dhyan2412/media-service:latest
    container_name: media-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongodb_media
      - discovery-server
      - api-gateway

  ## Article Server
  article-service:
    image: dhyan2412/article-service:latest
    container_name: article-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - api-gateway
      - mongodb_article
      - discovery-server


  ## User Server
  user-service:
    image: dhyan2412/user-service:latest
    container_name: user-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongodb_user
      - discovery-server
      - api-gateway

  ## Prometheus
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      restart: always
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      depends_on:
        - journal-service
        - article-service
        - user-service
        - media-service

  grafana:
      image: grafana/grafana-oss:latest
      container_name: grafana
      restart: always
      ports:
        - "3000:3000"
      links:
        - prometheus:prometheus
      volumes:
        - ./grafana:/var/lib/grafana
      environment:
        - GF_SECURITY_ADMIN_USER=ipmugo_admin
        - GF_SECURITY_ADMIN_PASSWORD=ipmugo_admin

