version: '3.7'
services:
  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres-keycloak
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres-keycloak:/data/postgres
    expose:
      - '5431'
    ports:
      - '5431:5431'
    command: -p 5431
    restart: always

  postgres-media:
    container_name: postgres-media
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres-media
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres-media:/data/postgres
    expose:
      - '5432'
    ports:
      - '5432:5432'
    command: -p 5432
    restart: always

  postgres-journal:
    container_name: postgres-journal
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres-journal
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres-journal:/data/postgres
    expose:
      - '5433'
    ports:
      - '5433:5433'
    command: -p 5433
    restart: always

  postgres-user:
    container_name: postgres-user
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres-user
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - '5434'
    ports:
      - '5434:5434'
    command: -p 5434
    restart: always

  postgres-author:
    container_name: postgres-author
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres-author
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres-author:/data/postgres
    expose:
      - '5435'
    ports:
      - '5435:5435'
    command: -p 5435
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - node.name=node-1
      - cluster.name=search-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://elasticsearch:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - 5601:5601
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: ['start-dev', '--import-realm']
    environment:
      DB_VENDOR: postgresql
      DB_ADDR: postgres
      DB_DATABASE: postgres_keycloak
      DB_USER: ipmugo_admin
      DB_PASSWORD: ipmugo_admin
      KEYCLOAK_ADMIN: ipmugo_admin
      KEYCLOAK_ADMIN_PASSWORD: ipmugo_admin
    ports:
      - '8080:8080'
    volumes:
      - ./realms/:/opt/jboss/keycloak/imports/
    restart: always
    depends_on:
      - postgres-keycloak

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    restart: always
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: always
    ports:
      - '9411:9411'

  service-database:
    container_name: service-database
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./service-database:/data/db

  discovery-server:
    image: dhyan2412/discovery-server:latest
    container_name: discovery-server
    restart: always
    ports:
      - '8352:8352'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: dhyan2412/api-gateway:latest
    container_name: api-gateway
    restart: always
    ports:
      - '80:80'
    expose:
      - '80'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  ## Journal Server
  journal-service:
    image: dhyan2412/journal-service:latest
    container_name: journal-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-journal
      - discovery-server
      - api-gateway
      - broker
      - zipkin

  ## Media Server
  media-service:
    image: dhyan2412/media-service:latest
    container_name: media-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - IMAGE_ZONE=http://localhost
    depends_on:
      - zipkin
      - postgres-media
      - discovery-server
      - api-gateway

  ## Article Server
  article-service:
    image: dhyan2412/article-service:latest
    container_name: article-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - api-gateway
      - service-database
      - discovery-server

  ## User Server
  user-service:
    image: dhyan2412/user-service:latest
    container_name: user-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - postgres-user
      - discovery-server
      - api-gateway

  ## Search Server
  search-service:
    image: dhyan2412/search-service:latest
    container_name: search-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ELASTICSEARCH_PASSWORD=zo3*o40zA98iUXn1TLZ8
    depends_on:
      - zipkin
      - elasticsearch
      - discovery-server
      - api-gateway
      - broker

  ## Author Server
  author-service:
    image: dhyan2412/author-service:latest
    container_name: author-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - api-gateway
      - postgres-author
      - discovery-server

  ## Set Counter Server
  set-counter:
    image: dhyan2412/set-counter:latest
    container_name: set-counter
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - api-gateway
      - service-database
      - discovery-server


  ## Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - article-service
      - journal-service
      - media-service
      - search-service
      - author-service
      - set-counter

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - '3001:3000'
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=ipmugo_admin
      - GF_SECURITY_ADMIN_PASSWORD=ipmugo_admin
