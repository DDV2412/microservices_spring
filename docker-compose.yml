version: '3.7'
services:
  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:latest
    environment:
      POSTGRES_ROOT: root
      POSTGRES_DB: postgres-keycloak
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
    volumes:
      - ./postgres-keycloak:/data/postgres
    expose:
      - "5431"
    ports:
        - "5431:5431"
    command: -p 5431
    restart: always


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - cluster.name=search-cluster
      - node.name=search-1
      - bootstrap.memory_lock=true
      - transport.host= 127.0.0.1
      - http.host= 0.0.0.0
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elastic
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://elasticsearch:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - 5601:5601
    networks:
      - elastic
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status


  userDb:
    container_name: userDb
    image: mongo:latest
    restart: always
    ports:
      - '27018:27017'
    volumes:
      - ./userDb:/data/db


  mediaDb:
    container_name: mediaDb
    image: mongo:latest
    restart: always
    ports:
      - '27019:27017'
    volumes:
      - ./mediaDb:/data/db

  journalDb:
    container_name: journalDb
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./journalDb:/data/db

  articleDb:
    container_name: articleDb
    image: mongo:latest
    restart: always
    ports:
      - '27020:27017'
    volumes:
      - ./articleDb:/data/db

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: postgresql
      DB_ADDR: postgres
      DB_DATABASE: postgres_keycloak
      DB_USER: ipmugo_admin
      DB_PASSWORD: ipmugo_admin
      KEYCLOAK_ADMIN: ipmugo_admin
      KEYCLOAK_ADMIN_PASSWORD: ipmugo_admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    restart: always
    depends_on:
      - postgres-keycloak

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: always
    ports:
      - "9411:9411"

  ## Prometheus
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      restart: always
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
      image: grafana/grafana-oss:latest
      container_name: grafana
      restart: always
      ports:
        - "3000:3000"
      links:
        - prometheus:prometheus
      volumes:
        - ./grafana:/var/lib/grafana
      environment:
        - GF_SECURITY_ADMIN_USER=ipmugo_admin
        - GF_SECURITY_ADMIN_PASSWORD=ipmugo_admin

networks:
  elastic:
    driver: bridge