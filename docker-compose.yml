version: '3.7'
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: public_archives
      POSTGRES_USER: ipmugo_admin
      POSTGRES_PASSWORD: ipmugo_admin
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: always

  ## MongoDB Compose User Sevice Docker Config
  mongodb_user_service:
    container_name: mongodb_user_service
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ipmugo_admin
      MONGO_INITDB_ROOT_PASSWORD: ipmugo_admin
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb-data:/data/db

  ## MongoDB Compose Media Sevice Docker Config
  mongodb_media_service:
    container_name: mongodb_media_service
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ipmugo_admin
      MONGO_INITDB_ROOT_PASSWORD: ipmugo_admin
    ports:
      - "27018:27017"
    volumes:
      - ./mongodb-data:/data/db

  ## MongoDB Compose Journal Sevice Docker Config
  mongodb_journal_service:
    container_name: mongodb_journal_service
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ipmugo_admin
      MONGO_INITDB_ROOT_PASSWORD: ipmugo_admin
    ports:
      - "27019:27017"
    volumes:
      - ./mongodb-data:/data/db

  ## MongoDB Compose Journal Sevice Docker Config
  mongodb_article_service:
    container_name: mongodb_article_service
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ipmugo_admin
      MONGO_INITDB_ROOT_PASSWORD: ipmugo_admin
    ports:
      - "27020:27017"
    volumes:
      - ./mongodb-data:/data/db

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm" ]
    environment:
      KEYCLOAK_ADMIN: ipmugo_admin
      KEYCLOAK_ADMIN_PASSWORD: ipmugo_admin
    ports:
      - "8181:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Prometheus
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      restart: always
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
      image: grafana/grafana-oss:latest
      container_name: grafana
      restart: always
      ports:
        - "3000:3000"
      links:
        - prometheus:prometheus
      volumes:
        - ./grafana:/var/lib/grafana
      environment:
        - GF_SECURITY_ADMIN_USER=ipmugo_admin
        - GF_SECURITY_ADMIN_PASSWORD=ipmugo_admin

